# -*- coding: utf-8 -*-
import os
import platform
import re
import shutil
import subprocess
import sys


from qgis.core import QgsApplication

PLUGIN_NAME = os.getcwd().split("\\")[-1]
BASE_DIR = os.getcwd()
QGIS_PLUGIN_DIR = "C:/Users/zjp/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/"
TARGET_PLUGIN_DIR = QGIS_PLUGIN_DIR + PLUGIN_NAME
QGIS_EXEC_PATH = "C:/Program Files/QGIS 3.0/bin/qgis-bin.exe"
source = b''
userDir = QgsApplication.qgisUserDatabaseFilePath()
print(userDir.encode("gbk").decode())

excludes = [
    ".idea",
    ".git",
    ".gitignore",
    ".svn",
    "*.pyc",
    "issues",
    "document",
    "__pycache__/*",
    "README.md",
    "Makefile",
    "sync",
    "resources.qrc",
    "static.bat",
    "ts.bat",
    "*.ts",
    "LICENSE"
]


def dir_add_end(path):
    if not path.endswith("/"):
        return path + "/"


with open(os.path.join(BASE_DIR, "metadata.txt"), "r") as f:
    line = f.readline()
    while line:
        if line.strip() != "[general]":
            line = f.readline()
        else:
            name_match = re.findall(r'name=(/w+)*', f.readline().strip())
            if name_match:
                PLUGIN_NAME = name_match[0]
                break
    f.close()

if os.path.exists(TARGET_PLUGIN_DIR):
    shutil.rmtree(TARGET_PLUGIN_DIR)

shutil.copytree(os.getcwd(), "{}".format(TARGET_PLUGIN_DIR), False, shutil.ignore_patterns(*excludes))


sys.exit(1)

# qgs = subprocess.Popen(['taskkill', '/F', '/IM', 'qgis-bin.exe'], stdin=subprocess.PIPE, stderr=subprocess.PIPE)
# out, err = qgs.communicate()
# if err is not None:
#     encoding = 'utf-8'
#     sysstr = platform.system()
#     if sysstr == "Windows":
#         encoding = 'gbk'
#     print(err.decode(encoding))
# p = subprocess.Popen(QGIS_EXEC_PATH, stdin=subprocess.PIPE, stdout=None)
# p.communicate(input=source)
